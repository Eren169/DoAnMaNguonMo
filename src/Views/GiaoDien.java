/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Views;

import static com.mysql.cj.conf.PropertyKey.PASSWORD;
import static com.mysql.cj.conf.PropertyKey.USER;
import com.sun.jdi.connect.spi.Connection;
import java.net.URL;
import static java.nio.file.Files.list;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import static java.util.Collections.list;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.SanPham;
import Connection.MySQLConnectionSanPham;
import static com.sun.tools.attach.VirtualMachine.list;
import static java.nio.file.Files.list;
import java.util.ArrayList;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.JTextField;
import org.apache.poi.ss.usermodel.*;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import java.io.FileOutputStream;
import java.io.IOException;

/**
 *
 * @author dangt
 */
public class GiaoDien extends javax.swing.JFrame {

    private static final String URL = "jdbc:mysql://localhost:3306/quanlikho";
    private static final String USER = "root";
    private static final String PASSWORD = "1234";

    private DefaultTableModel tableModel;
    private DefaultTableModel tableModelNhaCungCap;
    private DefaultTableModel tableModelTonKho;

    /**
     * Creates new form TrangChu
     */
    public GiaoDien() {

        initComponents();
        setLocationRelativeTo(null); // Đặt cửa sổ ở giữa màn hình
        capNhatBangDuLieuSanPham(); // Load dữ liệu khi khởi động
        tableModelNhaCungCap = new DefaultTableModel();
        capNhatBangDuLieuSanPham(); // Load data on startup
        capNhatBangDuLieuNhaCungCap();
        capNhapBangDuLieuTonKho();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        jPopupMenu1 = new javax.swing.JPopupMenu();
        Main = new javax.swing.JPanel();
        Menu = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        NutTrangChu = new javax.swing.JLabel();
        NutSanPham = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        NutDangXuat = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        TrangChu = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        ThemMoi = new javax.swing.JButton();
        nutxoa = new javax.swing.JButton();
        nutsanpham = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JToolBar.Separator();
        XuatExecl = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        BangDuLieuSanPham = new javax.swing.JTable();
        SanPham = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        BangDuLieuTonKho = new javax.swing.JTable();
        NhapHangHoa = new javax.swing.JPanel();
        jToolBar2 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jSeparator3 = new javax.swing.JToolBar.Separator();
        jButton4 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        NhaCungCap = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        BangDuLieuNhaCungCap = new javax.swing.JTable();
        jToolBar3 = new javax.swing.JToolBar();
        ThemMoiNhaCungCap = new javax.swing.JButton();
        nutxoaNhaCungCap = new javax.swing.JButton();
        nutsanphamNhaCungCap = new javax.swing.JButton();
        jSeparator4 = new javax.swing.JToolBar.Separator();
        XuatExeclNhaCungCap = new javax.swing.JButton();

        jMenu1.setText("jMenu1");

        jMenu2.setText("jMenu2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Menu.setBackground(new java.awt.Color(51, 255, 255));

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));

        NutTrangChu.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        NutTrangChu.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NutTrangChu.setText("Sản Phẩm");
        NutTrangChu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        NutTrangChu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NutTrangChuMouseClicked(evt);
            }
        });

        NutSanPham.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        NutSanPham.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NutSanPham.setText("Tồn Kho");
        NutSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NutSanPhamMouseClicked(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Nhà Cung Cấp ");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Nhập Hàng Hóa");
        jLabel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel2MouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Xuất Hàng Hóa");

        NutDangXuat.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        NutDangXuat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NutDangXuat.setText("Đăng Xuất");
        NutDangXuat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                NutDangXuatMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Phần Quyền");

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/OIP (2).jpg"))); // NOI18N
        jLabel5.setText("jLabel5");

        javax.swing.GroupLayout MenuLayout = new javax.swing.GroupLayout(Menu);
        Menu.setLayout(MenuLayout);
        MenuLayout.setHorizontalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NutDangXuat, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NutSanPham, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(NutTrangChu, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addComponent(jSeparator1))
            .addGroup(MenuLayout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MenuLayout.setVerticalGroup(
            MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33)
                .addGroup(MenuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(NutTrangChu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(NutSanPham, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(55, 55, 55)
                .addComponent(NutDangXuat, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel1.setLayout(new java.awt.CardLayout());

        jToolBar1.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar1.setRollover(true);

        ThemMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Add.png"))); // NOI18N
        ThemMoi.setText("Thêm Mới");
        ThemMoi.setFocusable(false);
        ThemMoi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ThemMoi.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ThemMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemMoiActionPerformed(evt);
            }
        });
        jToolBar1.add(ThemMoi);

        nutxoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Delete.png"))); // NOI18N
        nutxoa.setText("Xóa");
        nutxoa.setFocusable(false);
        nutxoa.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nutxoa.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nutxoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nutxoaActionPerformed(evt);
            }
        });
        jToolBar1.add(nutxoa);

        nutsanpham.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Edit.png"))); // NOI18N
        nutsanpham.setText("Sửa");
        nutsanpham.setFocusable(false);
        nutsanpham.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nutsanpham.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nutsanpham.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nutsanphamActionPerformed(evt);
            }
        });
        jToolBar1.add(nutsanpham);
        jToolBar1.add(jSeparator2);

        XuatExecl.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Notes.png"))); // NOI18N
        XuatExecl.setText("Xuất Excel");
        XuatExecl.setFocusable(false);
        XuatExecl.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        XuatExecl.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        XuatExecl.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XuatExeclActionPerformed(evt);
            }
        });
        jToolBar1.add(XuatExecl);

        BangDuLieuSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Hàng Hóa", "Tên Hàng Hóa", "Mô Tả ", "Giá Bán", "Mã Nhà Cung Cấp"
            }
        ));
        jScrollPane1.setViewportView(BangDuLieuSanPham);

        javax.swing.GroupLayout TrangChuLayout = new javax.swing.GroupLayout(TrangChu);
        TrangChu.setLayout(TrangChuLayout);
        TrangChuLayout.setHorizontalGroup(
            TrangChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrangChuLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TrangChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 760, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        TrangChuLayout.setVerticalGroup(
            TrangChuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TrangChuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar1, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel1.add(TrangChu, "card2");

        BangDuLieuTonKho.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã Hàng Hóa", "Tên Hàng Hóa", "Mô Tả", "Giá Bán", "Số Lượng", "Mã Nhà Cung Cấp"
            }
        ));
        jScrollPane4.setViewportView(BangDuLieuTonKho);

        javax.swing.GroupLayout SanPhamLayout = new javax.swing.GroupLayout(SanPham);
        SanPham.setLayout(SanPhamLayout);
        SanPhamLayout.setHorizontalGroup(
            SanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 747, Short.MAX_VALUE))
        );
        SanPhamLayout.setVerticalGroup(
            SanPhamLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SanPhamLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(278, Short.MAX_VALUE))
        );

        jPanel1.add(SanPham, "card3");

        jToolBar2.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar2.setRollover(true);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Add.png"))); // NOI18N
        jButton1.setText("Thêm Mới");
        jButton1.setFocusable(false);
        jButton1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton1.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar2.add(jButton1);

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/List.png"))); // NOI18N
        jButton2.setText("Chi Tiết");
        jButton2.setFocusable(false);
        jButton2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton2.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(jButton2);

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Delete.png"))); // NOI18N
        jButton3.setText("Hủy Phiếu");
        jButton3.setFocusable(false);
        jButton3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton3.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(jButton3);
        jToolBar2.add(jSeparator3);

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Notes.png"))); // NOI18N
        jButton4.setText("Xuất Excel");
        jButton4.setFocusable(false);
        jButton4.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButton4.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBar2.add(jButton4);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Số Thứ Tự", "ID Phiếu Nhập", "Nhà Cung Cấp", "Số Lượng", "TổngTiền", "Ngày"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout NhapHangHoaLayout = new javax.swing.GroupLayout(NhapHangHoa);
        NhapHangHoa.setLayout(NhapHangHoaLayout);
        NhapHangHoaLayout.setHorizontalGroup(
            NhapHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBar2, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NhapHangHoaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        NhapHangHoaLayout.setVerticalGroup(
            NhapHangHoaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NhapHangHoaLayout.createSequentialGroup()
                .addComponent(jToolBar2, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 282, Short.MAX_VALUE))
        );

        jPanel1.add(NhapHangHoa, "card4");

        NhaCungCap.setPreferredSize(new java.awt.Dimension(760, 530));

        BangDuLieuNhaCungCap.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Mã Nhà Cung Cấp", "Tên Nhà Cung Cấp ", "Mail", "Số Điện Thoại", "Địa Chỉ"
            }
        ));
        jScrollPane3.setViewportView(BangDuLieuNhaCungCap);

        jToolBar3.setBackground(new java.awt.Color(255, 255, 255));
        jToolBar3.setRollover(true);

        ThemMoiNhaCungCap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Add.png"))); // NOI18N
        ThemMoiNhaCungCap.setText("Thêm Mới");
        ThemMoiNhaCungCap.setFocusable(false);
        ThemMoiNhaCungCap.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        ThemMoiNhaCungCap.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        ThemMoiNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ThemMoiNhaCungCapActionPerformed(evt);
            }
        });
        jToolBar3.add(ThemMoiNhaCungCap);

        nutxoaNhaCungCap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Delete.png"))); // NOI18N
        nutxoaNhaCungCap.setText("Xóa");
        nutxoaNhaCungCap.setFocusable(false);
        nutxoaNhaCungCap.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nutxoaNhaCungCap.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nutxoaNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nutxoaNhaCungCapActionPerformed(evt);
            }
        });
        jToolBar3.add(nutxoaNhaCungCap);

        nutsanphamNhaCungCap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Edit.png"))); // NOI18N
        nutsanphamNhaCungCap.setText("Sửa");
        nutsanphamNhaCungCap.setFocusable(false);
        nutsanphamNhaCungCap.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        nutsanphamNhaCungCap.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        nutsanphamNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nutsanphamNhaCungCapActionPerformed(evt);
            }
        });
        jToolBar3.add(nutsanphamNhaCungCap);
        jToolBar3.add(jSeparator4);

        XuatExeclNhaCungCap.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/Notes.png"))); // NOI18N
        XuatExeclNhaCungCap.setText("Xuất Excel");
        XuatExeclNhaCungCap.setFocusable(false);
        XuatExeclNhaCungCap.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        XuatExeclNhaCungCap.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        XuatExeclNhaCungCap.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                XuatExeclNhaCungCapActionPerformed(evt);
            }
        });
        jToolBar3.add(XuatExeclNhaCungCap);

        javax.swing.GroupLayout NhaCungCapLayout = new javax.swing.GroupLayout(NhaCungCap);
        NhaCungCap.setLayout(NhaCungCapLayout);
        NhaCungCapLayout.setHorizontalGroup(
            NhaCungCapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(NhaCungCapLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(NhaCungCapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 272, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 748, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        NhaCungCapLayout.setVerticalGroup(
            NhaCungCapLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, NhaCungCapLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jToolBar3, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jPanel1.add(NhaCungCap, "card5");

        javax.swing.GroupLayout MainLayout = new javax.swing.GroupLayout(Main);
        Main.setLayout(MainLayout);
        MainLayout.setHorizontalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainLayout.createSequentialGroup()
                .addComponent(Menu, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 753, Short.MAX_VALUE)
                .addContainerGap())
        );
        MainLayout.setVerticalGroup(
            MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MainLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Menu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Main, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NutDangXuatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NutDangXuatMouseClicked
        // TODO add your handling code here:
        performLogout();
    }//GEN-LAST:event_NutDangXuatMouseClicked

    private void jLabel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel2MouseClicked
        // TODO add your handling code here:
        NhapHangHoa.setVisible(true);
        SanPham.setVisible(false);
        TrangChu.setVisible(false);
        NhaCungCap.setVisible(false);
    }//GEN-LAST:event_jLabel2MouseClicked

    private void NutSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NutSanPhamMouseClicked
        // TODO add your handling code here:
        SanPham.setVisible(true);
        TrangChu.setVisible(false);
        NhapHangHoa.setVisible(false);
        NhaCungCap.setVisible(false);
    }//GEN-LAST:event_NutSanPhamMouseClicked

    private void NutTrangChuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_NutTrangChuMouseClicked

        // TODO add your handling code here:
        TrangChu.setVisible(true);
        SanPham.setVisible(false);
        NhapHangHoa.setVisible(false);
        NhaCungCap.setVisible(false);
    }//GEN-LAST:event_NutTrangChuMouseClicked

    private void XuatExeclActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XuatExeclActionPerformed
        // TODO add your handling code here:
        // Đặt tên tệp Excel cần xuất ra
        String fileName = "SanPham.xlsx";

        // Tạo một workbook mới sử dụng Apache POI
        Workbook workbook = new XSSFWorkbook();
        Sheet sheet = workbook.createSheet("SanPham");

        // Tạo dòng đầu tiên là header từ bảng JTable
        Row headerRow = sheet.createRow(0);
        for (int col = 0; col < BangDuLieuSanPham.getColumnCount(); col++) {
            Cell cell = headerRow.createCell(col);
            cell.setCellValue(BangDuLieuSanPham.getColumnName(col));
        }

        // Tạo các dòng tiếp theo với dữ liệu từ bảng JTable
        for (int row = 0; row < BangDuLieuSanPham.getRowCount(); row++) {
            Row dataRow = sheet.createRow(row + 1);
            for (int col = 0; col < BangDuLieuSanPham.getColumnCount(); col++) {
                Cell cell = dataRow.createCell(col);
                Object value = BangDuLieuSanPham.getValueAt(row, col);
                if (value != null) {
                    cell.setCellValue(value.toString());
                } else {
                    cell.setCellValue(""); // Nếu dữ liệu null, đặt giá trị rỗng
                }
            }
        }

        // Ghi workbook ra tệp Excel
        try (FileOutputStream fos = new FileOutputStream(fileName)) {
            workbook.write(fos);
            // Thông báo xuất thành công
            JOptionPane.showMessageDialog(this, "Dữ liệu đã được xuất ra tệp " + fileName);
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi khi xuất dữ liệu: " + ex.getMessage());
        }
    }//GEN-LAST:event_XuatExeclActionPerformed

    private void nutsanphamActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nutsanphamActionPerformed
        // TODO add your handling code here:
        int selectedRow = BangDuLieuSanPham.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm để sửa.");
            return;
        }

        // Lấy dữ liệu từ hàng đã chọn
        String id = BangDuLieuSanPham.getValueAt(selectedRow, 0).toString();
        String ten = BangDuLieuSanPham.getValueAt(selectedRow, 1).toString();
        String moTa = BangDuLieuSanPham.getValueAt(selectedRow, 2).toString();
        String giaBanStr = BangDuLieuSanPham.getValueAt(selectedRow, 3).toString();

        // Tạo một giao diện để sửa thông tin sản phẩm
        JTextField tenField = new JTextField(ten);
        JTextField moTaField = new JTextField(moTa);
        JTextField giaBanField = new JTextField(giaBanStr);

        JPanel panel = new JPanel(new java.awt.GridLayout(3, 2));
        panel.add(new JLabel("Tên hàng hóa:"));
        panel.add(tenField);
        panel.add(new JLabel("Mô tả:"));
        panel.add(moTaField);
        panel.add(new JLabel("Giá bán:"));
        panel.add(giaBanField);

        // Hiển thị hộp thoại để người dùng nhập thông tin
        int result = JOptionPane.showConfirmDialog(this, panel, "Sửa sản phẩm với ID " + id, JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {
            // Lấy dữ liệu mới sau khi người dùng chỉnh sửa
            String tenMoi = tenField.getText();
            String moTaMoi = moTaField.getText();
            double giaBanMoi;

            try {
                giaBanMoi = Double.parseDouble(giaBanField.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập giá bán hợp lệ.");
                return;
            }

            // Kết nối với cơ sở dữ liệu và thực hiện cập nhật
            try {
                java.sql.Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
                String query = "UPDATE hanghoa SET TenHangHoa = ?, MoTa = ?, GiaBan = ? WHERE IDHangHoa = ?";
                PreparedStatement suadulieu = conn.prepareStatement(query);
                suadulieu.setString(1, tenMoi);
                suadulieu.setString(2, moTaMoi);
                suadulieu.setDouble(3, giaBanMoi);
                suadulieu.setString(4, id);

                // Thực thi câu lệnh và kiểm tra kết quả
                int rowsAffected = suadulieu.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Sản phẩm với ID " + id + " đã được cập nhật.");
                    // Cập nhật lại bảng dữ liệu sau khi sửa
                    capNhatBangDuLieuSanPham();
                    capNhapBangDuLieuTonKho();
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm với ID " + id + ".");
                }
            } catch (SQLException ex) {
                Logger.getLogger(GiaoDien.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật sản phẩm: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_nutsanphamActionPerformed

    private void nutxoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nutxoaActionPerformed
        // TODO add your handling code here:
        int selectedRow = BangDuLieuSanPham.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm để xóa.");
            return;
        }

        // Lấy giá trị ID từ hàng đã chọn (giả định ID nằm ở cột đầu tiên)
        String id = BangDuLieuSanPham.getValueAt(selectedRow, 0).toString();

        // Hỏi lại người dùng để xác nhận việc xóa
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sản phẩm với ID " + id + " không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Kết nối với cơ sở dữ liệu và thực hiện truy vấn xóa
        try {
            java.sql.Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
            String query = "DELETE FROM hanghoa WHERE IDHangHoa = ?";
            PreparedStatement statement = conn.prepareStatement(query);

            statement.setString(1, id);

            // Thực thi câu lệnh và kiểm tra kết quả
            int rowsAffected = statement.executeUpdate();
            if (rowsAffected > 0) {
                // Cập nhật lại bảng dữ liệu sau khi xóa
                capNhatBangDuLieuSanPham();
                capNhapBangDuLieuTonKho();
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm với ID " + id + ".");
            }
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa sản phẩm: " + ex.getMessage());
        }
    }//GEN-LAST:event_nutxoaActionPerformed

    private void ThemMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemMoiActionPerformed
        // TODO add your handling code here:
        // Mở giao diện thêm
        ThemMoiSanPham themoisanpham = new ThemMoiSanPham();
        themoisanpham.setVisible(true);
        themoisanpham.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                // Gọi lại hàm cập nhật bảng dữ liệu sau khi cửa sổ ThemMoiSanPham đóng
                capNhatBangDuLieuSanPham();
                capNhapBangDuLieuTonKho();
            }
        });
    }//GEN-LAST:event_ThemMoiActionPerformed

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        // TODO add your handling code here:
        NhaCungCap.setVisible(true);
        TrangChu.setVisible(false);
        SanPham.setVisible(false);
        NhapHangHoa.setVisible(false);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void ThemMoiNhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ThemMoiNhaCungCapActionPerformed
        // TODO add your handling code here:
        ThemNhaCungCapMoi themoinhacungcap = new ThemNhaCungCapMoi();
        themoinhacungcap.setVisible(true);
        themoinhacungcap.addWindowListener(new java.awt.event.WindowAdapter() {
            @Override
            public void windowClosed(java.awt.event.WindowEvent windowEvent) {
                // Gọi lại hàm cập nhật bảng dữ liệu sau khi cửa sổ ThemMoiSanPham đóng
                capNhatBangDuLieuNhaCungCap();
            }
        });
    }//GEN-LAST:event_ThemMoiNhaCungCapActionPerformed

    private void nutxoaNhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nutxoaNhaCungCapActionPerformed
        // TODO add your handling code here:
        int selectedRow = BangDuLieuNhaCungCap.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn sản phẩm để xóa.");
            return;
        }

        // Lấy giá trị ID từ hàng đã chọn (giả định ID nằm ở cột đầu tiên)
        String id = BangDuLieuNhaCungCap.getValueAt(selectedRow, 0).toString();

        // Hỏi lại người dùng để xác nhận việc xóa
        int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc chắn muốn xóa sản phẩm với ID " + id + " không?", "Xác nhận xóa", JOptionPane.YES_NO_OPTION);
        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        // Kết nối với cơ sở dữ liệu và thực hiện truy vấn xóa
        try {
            java.sql.Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
            String query = "DELETE FROM nhacungcap WHERE IDNCC = ?";
            PreparedStatement statement = conn.prepareStatement(query);

            statement.setString(1, id);

            // Thực thi câu lệnh và kiểm tra kết quả
            int rowsAffected = statement.executeUpdate();
            if (rowsAffected > 0) {
                // Cập nhật lại bảng dữ liệu sau khi xóa
                capNhatBangDuLieuNhaCungCap();
            } else {
                JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm với ID " + id + ".");
            }
        } catch (SQLException ex) {
            Logger.getLogger(GiaoDien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Lỗi khi xóa sản phẩm: " + ex.getMessage());
        }
    }//GEN-LAST:event_nutxoaNhaCungCapActionPerformed

    private void nutsanphamNhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nutsanphamNhaCungCapActionPerformed
        // TODO add your handling code here:
        int selectedRow = BangDuLieuNhaCungCap.getSelectedRow();
        if (selectedRow == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn nhà cung cấp để sửa.");
            return;
        }

        // Lấy dữ liệu từ hàng đã chọn
        String IDNCC = BangDuLieuNhaCungCap.getValueAt(selectedRow, 0).toString();
        String TenNhaCungCap = BangDuLieuNhaCungCap.getValueAt(selectedRow, 1).toString();
        String Mail = BangDuLieuNhaCungCap.getValueAt(selectedRow, 2).toString();
        String SoDienThoai = BangDuLieuNhaCungCap.getValueAt(selectedRow, 3).toString();
        String DiaChi = BangDuLieuNhaCungCap.getValueAt(selectedRow, 4).toString();

        // Tạo một giao diện để sửa thông tin sản phẩm
        JTextField IDNCCField = new JTextField(IDNCC);
        JTextField TenNhaCungCapField = new JTextField(TenNhaCungCap);
        JTextField MailField = new JTextField(Mail);
        JTextField SoDienThoaiField = new JTextField(SoDienThoai);
        JTextField DiaChiField = new JTextField(DiaChi);

        JPanel panel = new JPanel(new java.awt.GridLayout(3, 2));
        panel.add(new JLabel("Mã Nhà Cung Cấp:"));
        panel.add(IDNCCField);
        panel.add(new JLabel("Tên Nhà Cung Cấp:"));
        panel.add(TenNhaCungCapField);
        panel.add(new JLabel("Địa Chỉ:"));
        panel.add(DiaChiField);
        panel.add(new JLabel("  Mail:"));
        panel.add(MailField);
        panel.add(new JLabel("Số Điện Thoai:"));
        panel.add(SoDienThoaiField);

        // Hiển thị hộp thoại để người dùng nhập thông tin
        int result = JOptionPane.showConfirmDialog(this, panel, "Sửa sản phẩm với ID " + IDNCC, JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if (result == JOptionPane.OK_OPTION) {
            // Lấy dữ liệu mới sau khi người dùng chỉnh sửa
            String manhacungcapMoi = IDNCCField.getText();
            String tenhacungcapMoi = TenNhaCungCapField.getText();
            String mailMoi = MailField.getText();
            int sodienthoaiMoi;
            String diachiMoi = DiaChiField.getText();

            try {
                sodienthoaiMoi = (int) Double.parseDouble(SoDienThoaiField.getText());
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Vui lòng nhập giá bán hợp lệ.");
                return;
            }

            // Kết nối với cơ sở dữ liệu và thực hiện cập nhật
            try {
                java.sql.Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
                String query = "UPDATE nhacungcap SET TenNhaCungCap = ?, Mail = ?, DiaChi = ?, SoDienThaoi = ? WHERE IDNCC = ?";
                PreparedStatement suadulieu = conn.prepareStatement(query);
                suadulieu.setString(1, manhacungcapMoi);
                suadulieu.setString(2, tenhacungcapMoi);
                suadulieu.setString(3, mailMoi);
                suadulieu.setString(4, diachiMoi);
                suadulieu.setDouble(5, sodienthoaiMoi);

                // Thực thi câu lệnh và kiểm tra kết quả
                int rowsAffected = suadulieu.executeUpdate();
                if (rowsAffected > 0) {
                    JOptionPane.showMessageDialog(this, "Sản phẩm với ID " + manhacungcapMoi + " đã được cập nhật.");
                    // Cập nhật lại bảng dữ liệu sau khi sửa
                    capNhatBangDuLieuNhaCungCap();
                } else {
                    JOptionPane.showMessageDialog(this, "Không tìm thấy sản phẩm với ID " + manhacungcapMoi + ".");
                }
            } catch (SQLException ex) {
                Logger.getLogger(GiaoDien.class.getName()).log(Level.SEVERE, null, ex);
                JOptionPane.showMessageDialog(this, "Lỗi khi cập nhật sản phẩm: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_nutsanphamNhaCungCapActionPerformed

    private void XuatExeclNhaCungCapActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_XuatExeclNhaCungCapActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_XuatExeclNhaCungCapActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        ThemPhieuNhap themphieunhap = new ThemPhieuNhap();
        themphieunhap.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GiaoDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GiaoDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GiaoDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GiaoDien.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GiaoDien().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BangDuLieuNhaCungCap;
    private javax.swing.JTable BangDuLieuSanPham;
    private javax.swing.JTable BangDuLieuTonKho;
    private javax.swing.JPanel Main;
    private javax.swing.JPanel Menu;
    private javax.swing.JPanel NhaCungCap;
    private javax.swing.JPanel NhapHangHoa;
    private javax.swing.JLabel NutDangXuat;
    private javax.swing.JLabel NutSanPham;
    private javax.swing.JLabel NutTrangChu;
    private javax.swing.JPanel SanPham;
    private javax.swing.JButton ThemMoi;
    private javax.swing.JButton ThemMoiNhaCungCap;
    private javax.swing.JPanel TrangChu;
    private javax.swing.JButton XuatExecl;
    private javax.swing.JButton XuatExeclNhaCungCap;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JToolBar.Separator jSeparator2;
    private javax.swing.JToolBar.Separator jSeparator3;
    private javax.swing.JToolBar.Separator jSeparator4;
    private javax.swing.JTable jTable1;
    private javax.swing.JToolBar jToolBar1;
    private javax.swing.JToolBar jToolBar2;
    private javax.swing.JToolBar jToolBar3;
    private javax.swing.JButton nutsanpham;
    private javax.swing.JButton nutsanphamNhaCungCap;
    private javax.swing.JButton nutxoa;
    private javax.swing.JButton nutxoaNhaCungCap;
    // End of variables declaration//GEN-END:variables

    private void performLogout() {
        System.out.println("User logged out successfully.");
        DangNhap dangnhap = new DangNhap();
        dangnhap.setVisible(true);
        this.dispose();
    }

    private void capNhatBangDuLieuSanPham() {
        String[] columnNames = {"Mã Hàng Hóa", "Tên Hàng Hóa", "Mô Tả", "Giá Bán", "Mã Nhà Cung Cấp"};
        DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0);

        try {
            java.sql.Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
            String query = "SELECT IDHangHoa, TenHangHoa, MoTa, GiaBan, IDNCC  FROM quanlikho.hanghoa";
            PreparedStatement statement = conn.prepareStatement(query);

            ResultSet resultSet = statement.executeQuery();
            while (resultSet.next()) {
                String IDHangHoa = resultSet.getString("IDHangHoa");
                String TenHangHoa = resultSet.getString("TenHangHoa");
                String MoTa = resultSet.getString("MoTa");
                double GiaBan = resultSet.getDouble("GiaBan");
                int IDNCC = resultSet.getInt("IDNCC");

                Object[] row = {IDHangHoa, TenHangHoa, MoTa, GiaBan, IDNCC};
                tableModel.addRow(row);
            }

            //
            BangDuLieuSanPham.setModel(tableModel);

        } catch (SQLException ex) {
            Logger.getLogger(GiaoDien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Không thể lấy dữ liệu từ cơ sở dữ liệu.", "Lỗi Cơ sở dữ liệu", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void capNhatBangDuLieuNhaCungCap() {
        String[] columnNames = {"Mã Nhà Cung Cấp", "Tên Nhà Cung Cấp", "Mail", "Số Điện Thoại", "Địa Chỉ"};
        DefaultTableModel tableModelNhaCungCap = new DefaultTableModel(columnNames, 0);

        try {
            java.sql.Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
            String query = "SELECT IDNCC, TenNhaCungCap, Email, SoDienThoai, DiaChi FROM quanlikho.nhacungcap";
            PreparedStatement statement = conn.prepareStatement(query);

            ResultSet resultSet = statement.executeQuery();
            while (resultSet.next()) {
                String IDNCC = resultSet.getString("IDNCC");
                String TenNhaCungCap = resultSet.getString("TenNhaCungCap");
                String DiaChi = resultSet.getString("DiaChi");
                
                int SoDienThoai = resultSet.getInt("SoDienThoai");
                String Email = resultSet.getString("Email");

                Object[] row = {IDNCC, TenNhaCungCap, Email, SoDienThoai, DiaChi};
                tableModelNhaCungCap.addRow(row);
            }

            //
            BangDuLieuNhaCungCap.setModel(tableModelNhaCungCap);

        } catch (SQLException ex) {
            Logger.getLogger(GiaoDien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Không thể lấy dữ liệu từ cơ sở dữ liệu.", "Lỗi Cơ sở dữ liệu", JOptionPane.ERROR_MESSAGE);
        }
    }

    private void capNhapBangDuLieuTonKho() {
        String[] columnNames = {"Mã Hàng Hóa", "Tên Hàng Hóa", "Mô Tả", "Giá Bán", "Số Lượng", "Mã Nhà Cung Cấp"};
        DefaultTableModel tableModelTonKho = new DefaultTableModel(columnNames, 0);

        try {
            java.sql.Connection conn = DriverManager.getConnection(URL, USER, PASSWORD);
            String query = "SELECT IDHangHoa, TenHangHoa, MoTa, GiaBan, SoLuongTonKho,IDNCC FROM hanghoa";
            PreparedStatement statement = conn.prepareStatement(query);

            ResultSet resultSet = statement.executeQuery();
            while (resultSet.next()) {
                String IDHangHoa = resultSet.getString("IDHangHoa");
                String TenHangHoa = resultSet.getString("TenHangHoa");
                String MoTa = resultSet.getString("MoTa");
                double GiaBan = resultSet.getDouble("GiaBan");
                int SoLuongTonKho = resultSet.getInt("SoLuongTonKho");
                int IDNCC = resultSet.getInt("IDNCC");

                Object[] row = {IDHangHoa, TenHangHoa, MoTa, GiaBan, SoLuongTonKho, IDNCC};
                tableModelTonKho.addRow(row);
            }

            //
            BangDuLieuTonKho.setModel(tableModelTonKho);

        } catch (SQLException ex) {
            Logger.getLogger(GiaoDien.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Không thể lấy dữ liệu từ cơ sở dữ liệu.", "Lỗi Cơ sở dữ liệu", JOptionPane.ERROR_MESSAGE);
        }
    }
}
